// Linux port of https://github.com/siikamiika/scripts/blob/master/windows/autismlayout.klc

default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "Autism (US)";

    // top row (numbers)
    key <TLDE> { [ grave, asciitilde, dead_grave, dead_tilde ] };
    key <AE01> { [ 1, exclam, onesuperior, exclamdown ] };
    key <AE02> {
        type = "EIGHT_LEVEL",
        symbols[Group1] = [ 2, at, NumLock, dead_doubleacute, NumLock, NoSymbol, NumLock, NoSymbol ],
        actions[Group1] = [ NoAction(), NoAction(), LockMods(modifiers=NumLock), NoAction(),
            LockMods(modifiers=NumLock), NoAction(), LockMods(modifiers=NumLock), NoAction() ]
    };
    key <AE03> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ 3, numbersign, sterling, dead_macron, slash, slash, slash, slash ]
    };
    key <AE04> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ 4, dollar, yen, currency, asterisk, asterisk, asterisk, asterisk ]
    };
    key <AE05> { [ 5, percent, EuroSign, dead_cedilla ] };
    key <AE06> { [ 6, asciicircum, dead_circumflex, onequarter ] };
    key <AE07> { [ 7, ampersand, dead_horn, onehalf ] };
    key <AE08> { [ 8, asterisk, dead_ogonek, threequarters ] };
    key <AE09> { [ 9, parenleft, leftsinglequotemark, dead_breve ] };
    key <AE10> { [ 0, parenright, rightsinglequotemark, dead_abovering ] };
    key <AE11> { [ minus, underscore, endash, emdash ] };
    key <AE12> { [ equal, plus, multiply, division ] };

    // first letter row
    key <AD01> { [ q, Q, aring, Aring ] };
    key <AD02> { [ w, W, w, W ] };
    key <AD03> { [ e, E, e, E ] };
    key <AD04> { [ r, R, r, R ] };
    key <AD05> { [ t, T, t, T ] };
    key <AD06> { [ y, Y, udiaeresis, Udiaeresis ] };
    key <AD07> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ u, U, Delete, Delete, 4, 4, 4, 4 ]
    };
    key <AD08> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ i, I, Insert, Insert, 5, 5, 5, 5 ]
    };
    key <AD09> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ o, O, odiaeresis, Odiaeresis, 6, 6, 6, 6 ]
    };
    key <AD10> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ p, P, Home, Home, plus, plus, plus, plus ]
    };
    key <AD11> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ bracketleft, braceleft, Prior, Prior, aring, Aring, Prior, Prior ]
    };
    key <AD12> { [ bracketright, braceright, dead_acute, dead_diaeresis ] };
    key <BKSL> { [ backslash, bar, notsign, brokenbar ] };

    // second letter row
    key <AC01> { [ a, A, adiaeresis, Adiaeresis ] };
    key <AC02> { [ s, S, s, section ] };
    key <AC03> { [ d, D, d, D ] };
    key <AC04> { [ f, F, f, F ] };
    key <AC05> { [ g, G, g, G ] };
    key <AC06> { [ h, H, Left, Left ] };
    key <AC07> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ j, J, Down, Down, 1, 1, 1, 1 ]
    };
    key <AC08> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ k, K, Up, Up, 2, 2, 2, 2 ]
    };
    key <AC09> {
        type = "EIGHT_LEVEL_SEMIALPHABETIC",
        Symbols[Group1] = [ l, L, Right, Right, 3, 3, 3, 3 ]
    };
    key <AC10> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ semicolon, colon, End, End, odiaeresis, Odiaeresis, End, End ]
    };
    key <AC11> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ apostrophe, quotedbl, Next, Next, adiaeresis, Adiaeresis, Next, Next ]
    };

    // bottom letter row
    key <LSGT> { [ adiaeresis, Adiaeresis, odiaeresis, Odiaeresis ] };
    key <AB01> { [ z, Z, z, Z ] };
    key <AB02> { [ x, X, x, X ] };
    key <AB03> { [ c, C, c, copyright ] };
    key <AB04> { [ v, V, v, registered ] };
    key <AB05> { [ b, B, b, B ] };
    key <AB06> { [ n, N, ntilde, Ntilde ] };
    key <AB07> { [ m, M, mu, mu ] };
    key <AB08> { [ comma, less, ccedilla, Ccedilla ] };
    key <AB09> { [ period, greater, dead_abovedot, dead_caron ] };
    key <AB10> { [ slash, question, questiondown, dead_hook ] };

    // misc
    key <CAPS> {
        symbols[Group1] = [ Escape, Caps_Lock, ISO_Level5_Lock, NoSymbol ],
        actions[Group1] = [ NoAction(), LockMods(modifiers=Lock), LockMods(modifiers=NumLock), NoAction() ]
    };

    include "level3(ralt_switch)"
    modifier_map Mod5 { <HENK> };
    modifier_map Mod2 { <MUHE> };
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod2 { <MDSW> };
};

partial alphanumeric_keys
xkb_symbols "fcitx-hack" {

    include "autism(basic)"

    name[Group1] = "Autism (US, fcitx hack)";
};
