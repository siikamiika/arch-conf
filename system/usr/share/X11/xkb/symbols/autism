// Linux port of https://github.com/siikamiika/scripts/blob/master/windows/autismlayout.klc

default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "Autism (US)";

    key <TLDE> { [    grave, asciitilde,  dead_grave,   dead_tilde      ] };
    key <AE01> { [        1, exclam,      onesuperior,  exclamdown      ] };
    key <AE02> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE02> {
        type = "EIGHT_LEVEL",
        symbols[Group1] = [ 2, at, twosuperior, dead_doubleacute, NumLock ],
        actions[Group1] = [ NoAction(), NoAction(), NoAction(), NoAction(), LockMods(modifiers=NumLock) ]
    };
    key <AE03> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ 3, numbersign, threesuperior, dead_macron, slash]
    };
    key <AE04> { [	   4,     dollar,      currency,         sterling ] };
    key <AE04> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ 4, dollar, currency, sterling, asterisk ]
    };
    key <AE05> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE06> { [        6, asciicircum, dead_circumflex, onequarter    ] };
    key <AE07> { [        7, ampersand,   dead_horn,       onehalf       ] };
    key <AE08> { [        8, asterisk,    dead_ogonek,     threequarters ] };
    key <AE09> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE10> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <AE11> { [     minus, underscore,           yen,    dead_belowdot ] };
    key <AE12> { [     equal,       plus,      multiply,         division ] };

    key <AD01> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
    key <AD02> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ w, W, aring, Aring, 7 ]
    };
    key <AD03> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ e, E, eacute, Eacute, 8 ]
    };
    key <AD04> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ r, R, ediaeresis, Ediaeresis, 9 ]
    };
    key <AD05> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ t, T, thorn, THORN, minus ]
    };
    key <AD06> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
    key <AD07> { [	   u,          U,        uacute,           Uacute ] };
    key <AD08> { [	   i,          I,        iacute,           Iacute ] };
    key <AD09> { [	   o,          O,        oacute,           Oacute ] };
    key <AD10> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ p, P, odiaeresis, Odiaeresis, Home ]
    };
    key <AD11> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark, Prior ]
    };
    key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AC01> { [	   a,          A,        aacute,           Aacute ] };
    key <AC02> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ s, S, ssharp, section, 4 ]
    };
    key <AC03> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ d, D, eth, ETH, 5 ]
    };
    key <AC04> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ f, F, f, F, 6 ]
    };
    key <AC05> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ g, G, g, G, plus ]
    };
    key <AC06> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ h, H, h, H, Left]
    };
    key <AC07> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ j, J, idiaeresis, Idiaeresis, Down ]
    };
    key <AC08> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ k, K, oe, OE, Up ]
    };
    key <AC09> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ l, L, oslash, Ooblique, Right ]
    };
    key <AC10> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ semicolon, colon, paragraph, degree, End ]
    };
    key <AC11> {
        type = "EIGHT_LEVEL",
        Symbols[Group1] = [ apostrophe, quotedbl, dead_acute, dead_diaeresis, Next ]
    };

    key <AB01> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ z, Z, ae, AE, 0 ]
    };
    key <AB02> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ x, X, oe, OE, 1 ]
    };
    key <AB03> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ c, C, copyright, cent, 2 ]
    };
    key <AB04> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ v, V, registered, registered, 3 ]
    };
    key <AB05> {
        type = "EIGHT_LEVEL_ALPHABETIC",
        Symbols[Group1] = [ b, B, b, B, period ]
    };
    key <AB06> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AB07> { [	   m,          M,            mu,               mu ] };
    key <AB08> { [     comma,       less,      ccedilla,         Ccedilla ] };
    key <AB09> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AB10> { [     slash,   question,  questiondown,        dead_hook ] };
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    key <LSGT> {    [   adiaeresis, Adiaeresis, odiaeresis, Odiaeresis  ]   };

    key <CAPS> {
        symbols[Group1] = [ Escape, Caps_Lock, ISO_Level5_Lock ],
        actions[Group1] = [ NoAction(), LockMods(modifiers=Lock), LockMods(modifiers=NumLock) ]
    };

    include "level3(ralt_switch)"
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod2 { <MDSW> };
};

partial alphanumeric_keys
xkb_symbols "fcitx-hack" {

    include "autism(basic)"

    name[Group1]="Autism (US, fcitx hack)";
};
